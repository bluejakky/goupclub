# Nginx reverse proxy for GoUp backend
# Proxies /api and /uploads to Node.js backend at 127.0.0.1:3000

upstream goup_backend {
  server 127.0.0.1:3000;
  keepalive 64;
}

server {
  listen 80;
  server_name www.goupclub.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name www.goupclub.com;

  # TLS certs (Let's Encrypt paths as example)
  ssl_certificate     /etc/letsencrypt/live/www.goupclub.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/www.goupclub.com/privkey.pem;
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  # Allow uploads
  client_max_body_size 10m;

  # Proxy common headers
  set $backend goup_backend;

  location /api/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass http://$backend;
  }

  location /uploads/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass http://$backend;
  }

  # Optional: serve a simple health check on root if needed
  location = /nginx-health {
    add_header Content-Type text/plain;
    return 200 "ok";
  }
}